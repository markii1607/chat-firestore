{"version":3,"sources":["actions/constants.js","components/Header/index.js","actions/auth.actions.js","components/Layout/index.js","containers/HomePage/index.js","actions/user.actions.js","components/UI/Card/index.js","containers/LoginPage/index.js","containers/RegisterPage/index.js","components/PrivateRoute.js","App.js","serviceWorker.js","reducers/auth.reducer.js","reducers/user.reducer.js","reducers/index.js","store/index.js","index.js"],"names":["authConstant","userConstant","Header","props","auth","useSelector","state","dispatch","useDispatch","className","style","display","authenticated","to","margin","color","fontWeight","firstName","lastName","onClick","uid","a","type","firestore","collection","doc","update","isOnline","then","signOut","localStorage","clear","catch","error","console","log","Layout","children","User","user","src","alt","flex","justifyContent","HomePage","unsubscribe","useState","chatStarted","setChatStarted","chatUser","setChatUser","message","setMessage","userUid","setUserUid","useEffect","db","onSnapshot","querySnapshot","users","forEach","data","push","payload","f","initChat","where","uid_1","uid_2","orderBy","conversations","user_uid_1","user_uid_2","length","getRealtimeConversations","map","key","con","textAlign","value","onChange","e","target","placeholder","msgObj","add","isView","createdAt","Date","updateMessage","Card","LoginPage","email","setEmail","password","setPassword","onSubmit","preventDefault","signInWithEmailAndPassword","name","displayName","split","loggedInUser","setItem","JSON","stringify","alert","RegisterPage","setFirstName","setLastName","createUserWithEmailAndPassword","currentUser","updateProfile","set","signup","PrivateRoute","Component","component","rest","getItem","parse","App","path","exact","Boolean","window","location","hostname","match","initState","authenticating","rootReducer","combineReducers","action","Store","createStore","applyMiddleware","thunk","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4bAAaA,EACG,aADHA,EAEI,cAGJC,EACW,qBADXA,EAEc,wB,QC2CZC,EAvCA,SAACC,GAEd,IAAMC,EAAOC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,QAClCG,EAAWC,cAEjB,OACE,4BAAQC,UAAU,UAChB,yBAAKC,MAAO,CAAEC,QAAS,SACrB,yBAAKF,UAAU,QAAf,iBAGGL,EAAKQ,cAII,KAHR,wBAAIH,UAAU,YACZ,4BAAI,kBAAC,IAAD,CAASI,GAAI,UAAb,UACJ,4BAAI,kBAAC,IAAD,CAASA,GAAI,WAAb,cAMZ,yBAAKH,MAAO,CAAEI,OAAQ,SAAUC,MAAO,OAAQC,WAAY,SACxDZ,EAAKQ,cAAL,aAA4BR,EAAKa,UAAjC,YAA8Cb,EAAKc,UAAa,IAGnE,wBAAIT,UAAU,QAEVL,EAAKQ,cACL,4BACE,kBAAC,IAAD,CAAMC,GAAI,IAAKM,QAAS,WC4Fd,IAACC,ED3FTb,GC2FSa,ED3FOhB,EAAKgB,IC4F/B,uCAAO,WAAMb,GAAN,SAAAc,EAAA,sDACHd,EAAS,CACLe,KAAK,GAAD,OAAKtB,EAAL,cAGGuB,sBACRC,WAAW,SACTC,IAAIL,GACJM,OAAO,CACJC,UAAU,IAEbC,MAAK,WACFxB,iBACKyB,UACAD,MAAK,WACFE,aAAaC,QACbxB,EAAS,CAAEe,KAAK,GAAD,OAAKtB,EAAL,iBAElBgC,OAAM,SAAAC,GACHC,QAAQC,IAAIF,GACZ1B,EAAS,CAAEe,KAAK,GAAD,OAAKtB,EAAL,oBAG1BgC,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MAxBjB,2CAAP,0DD7FQ,WAGM,QExBHG,EAVA,SAACjC,GACd,OACE,6BACI,kBAAC,EAAD,MACCA,EAAMkC,WCLTC,EAAO,SAACnC,GAAW,IAChBoC,EAAiBpC,EAAjBoC,KAAMpB,EAAWhB,EAAXgB,QACb,OACE,yBAAKA,QAAS,kBAAMA,EAAQoB,IAAO9B,UAAU,eAC3C,yBAAKA,UAAU,cACb,yBAAK+B,IAAI,+EAA+EC,IAAI,MAE9F,yBAAK/B,MAAO,CAAEC,QAAS,OAAQ+B,KAAM,EAAGC,eAAgB,gBAAiB7B,OAAQ,WAC/E,0BAAMJ,MAAO,CAAEM,WAAY,MAAQuB,EAAKtB,UAAxC,IAAoDsB,EAAKrB,UACzD,0BAAMT,UAAW8B,EAAKZ,SAAL,uCAwHViB,EAlHE,SAACzC,GAEhB,IAQI0C,EAREtC,EAAWC,cACXJ,EAAOC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,QAClCmC,EAAOlC,aAAY,SAAAC,GAAK,OAAIA,EAAMiC,QAJd,EAKYO,mBAAS,IALrB,mBAKnBC,EALmB,KAKNC,EALM,OAMMF,mBAAS,IANf,mBAMnBG,EANmB,KAMTC,EANS,OAOIJ,mBAAS,IAPb,mBAOnBK,EAPmB,KAOVC,EAPU,OAQIN,mBAAS,MARb,mBAQnBO,EARmB,KAQVC,EARU,KAY1BC,qBAAU,WC/BoB,IAACnC,EDgC7ByB,EAActC,GChCea,EDgCWhB,EAAKgB,IC/B7C,uCAAO,WAAMb,GAAN,iBAAAc,EAAA,6DACHd,EAAS,CAAEe,KAAK,GAAD,OAAKrB,EAAL,cAETuD,EAAKjC,sBAELsB,EAAcW,EAAGhC,WAAW,SAC7BiC,YAAW,SAAAC,GACR,IAAMC,EAAQ,GACdD,EAAcE,SAAQ,SAAUnC,GACxBA,EAAIoC,OAAOzC,KAAOA,GAClBuC,EAAMG,KAAKrC,EAAIoC,WAIvBtD,EAAS,CACLe,KAAK,GAAD,OAAKrB,EAAL,YACJ8D,QAAS,CAAEJ,cAhBpB,kBAoBQd,GApBR,2CAAP,wDDgCCjB,MAAK,SAAAiB,GACJ,OAAOA,KAERb,OAAM,SAAAC,GACLC,QAAQC,IAAIF,QAEb,IAEHsB,qBAAU,WACR,OAAO,WAELV,EACGjB,MAAK,SAAAoC,GACJA,OAEDhC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,SAGjB,IAEH,IAAMgC,EAAW,SAAC1B,GAChBS,GAAe,GACfE,EAAY,GAAD,OAAIX,EAAKtB,UAAT,YAAsBsB,EAAKrB,WACtCoC,EAAWf,EAAKnB,KAEhBc,QAAQC,IAAII,GAEZhC,ECdoC,SAACgC,GACrC,8CAAO,WAAMhC,GAAN,SAAAc,EAAA,sDACQE,sBACRC,WAAW,iBACT0C,MAAM,aAAc,KAAM,CAAC3B,EAAK4B,MAAO5B,EAAK6B,QAC5CC,QAAQ,YAAa,OACrBZ,YAAW,SAACC,GACT,IAAMY,EAAgB,GACtBZ,EAAcE,SAAQ,SAAAnC,IAEbA,EAAIoC,OAAOU,YAAchC,EAAK4B,OAAS1C,EAAIoC,OAAOW,YAAcjC,EAAK6B,OAErE3C,EAAIoC,OAAOU,YAAchC,EAAK6B,OAAS3C,EAAIoC,OAAOW,YAAcjC,EAAK4B,QAEtEG,EAAcR,KAAKrC,EAAIoC,WAI3BS,EAAcG,OAAS,EACvBlE,EAAS,CACLe,KAAMrB,EACN8D,QAAS,CAAEO,mBAGf/D,EAAS,CACLe,KAAK,GAAD,OAAKrB,EAAL,YACJ8D,QAAS,CAAEO,cAAe,MAIlCpC,QAAQC,IAAImC,MA7BjB,2CAAP,sDDaSI,CAAyB,CAAEP,MAAO/D,EAAKgB,IAAKgD,MAAO7B,EAAKnB,QAkBnE,OACE,kBAAC,EAAD,KACE,6BAASX,UAAU,aACjB,yBAAKA,UAAU,eAGX8B,EAAKoB,MAAMc,OAAS,EAClBlC,EAAKoB,MAAMgB,KAAI,SAAApC,GACb,OACE,kBAAC,EAAD,CACEpB,QAAS8C,EACTW,IAAKrC,EAAKnB,IACVmB,KAAMA,OAGP,MAIX,yBAAK9B,UAAU,YACb,yBAAKA,UAAU,cAEbsC,EAAcE,EAAW,IAG3B,yBAAKxC,UAAU,mBAEXsC,EACAR,EAAK+B,cAAcK,KAAI,SAAAE,GAAG,OACxB,yBAAKD,IAAKC,EAAIzD,IAAKV,MAAO,CAAEoE,UAAYD,EAAIN,YAAcnE,EAAKgB,IAAM,QAAS,SAC5E,uBAAGX,UAAU,gBAAgBoE,EAAI1B,aAGnC,MAKJJ,EACA,yBAAKtC,UAAU,gBACb,8BACEsE,MAAO5B,EACP6B,SAAU,SAACC,GAAD,OAAO7B,EAAW6B,EAAEC,OAAOH,QACrCI,YAAY,qBAEd,4BAAQhE,QA5DE,SAAC8D,GACrB,IAAMG,EAAS,CACbb,WAAYnE,EAAKgB,IACjBoD,WAAYnB,EACZF,WAGc,KAAZA,GACF5C,EC/CuB,SAAC6E,GAC1B,8CAAO,WAAM7E,GAAN,SAAAc,EAAA,sDACQE,sBACRC,WAAW,iBACT6D,IADL,eAEWD,EAFX,CAGQE,QAAQ,EACRC,UAAW,IAAIC,QAElB5D,MAAK,SAACiC,OAON7B,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MAhBjB,2CAAP,sDD8CWwD,CAAcL,IACtBxD,MAAK,WACJwB,EAAW,SAkDL,SACO,SEhHNsC,G,MARF,SAACvF,GACZ,OACE,yBAAKM,UAAU,QACVN,EAAMkC,YC8DAsD,G,MA3DG,SAACxF,GAAW,IAAD,EAED2C,mBAAS,IAFR,mBAEpB8C,EAFoB,KAEbC,EAFa,OAGK/C,mBAAS,IAHd,mBAGpBgD,EAHoB,KAGVC,EAHU,KAIrBxF,EAAWC,cAmBjB,OAlBaH,aAAY,SAAAC,GAAK,OAAIA,EAAMF,QAkB/BQ,cACA,kBAAC,IAAD,CAAUC,GAAE,MAInB,kBAAC,EAAD,KACE,yBAAKJ,UAAU,kBACb,kBAAC,EAAD,KACE,0BAAMuF,SAxBI,SAACf,GLyCC,IAAC1C,GKxCnB0C,EAAEgB,iBAEW,IAATL,GAKY,IAAZE,EAKJvF,GL4BmBgC,EK5BH,CAAEqD,QAAOE,YL6BzB,uCAAO,WAAMvF,GAAN,SAAAc,EAAA,sDACHd,EAAS,CACLe,KAAK,GAAD,OAAKtB,EAAL,cAGRI,iBACK8F,2BAA2B3D,EAAKqD,MAAOrD,EAAKuD,UAC5ClE,MAAK,SAACiC,GACH3B,QAAQC,IAAI0B,GAEDtC,sBAERC,WAAW,SACbC,IAAIoC,EAAKtB,KAAKnB,KACdM,OAAO,CACJC,UAAU,IAEbC,MAAM,WACH,IAAMuE,EAAOtC,EAAKtB,KAAK6D,YAAYC,MAAM,KAInCC,EAAe,CACjBrF,UAJckF,EAAK,GAKnBjF,SAJaiF,EAAK,GAKlB/E,IAAKyC,EAAKtB,KAAKnB,IACfwE,MAAO/B,EAAKtB,KAAKqD,OAGrB9D,aAAayE,QAAQ,OAAQC,KAAKC,UAAUH,IAE5C/F,EAAS,CACLe,KAAK,GAAD,OAAKtB,EAAL,YACJ+D,QAAS,CAAExB,KAAM+D,QAGxBtE,OAAM,SAAAC,GACHC,QAAQC,IAAIF,SAGnBD,OAAM,SAAAC,GACHC,QAAQC,IAAIF,GACZ1B,EAAS,CACLe,KAAK,GAAD,OAAKtB,EAAL,YACJ+D,QAAS,CAAE9B,cA5CpB,2CAAP,wDKjCEyE,MAAM,wBALNA,MAAM,uBAqBA,2BACEP,KAAK,QACL7E,KAAK,OACLyD,MAAOa,EACPZ,SAAU,SAACC,GAAD,OAAOY,EAASZ,EAAEC,OAAOH,QACnCI,YAAY,UAGd,2BACEgB,KAAK,WACL7E,KAAK,WACLyD,MAAOe,EACPd,SAAU,SAACC,GAAD,OAAOc,EAAYd,EAAEC,OAAOH,QACtCI,YAAY,aAGd,6BACE,gDCuBCwB,G,MAxEM,SAACxG,GAAW,IAAD,EACI2C,mBAAS,IADb,mBACvB7B,EADuB,KACZ2F,EADY,OAEE9D,mBAAS,IAFX,mBAEvB5B,EAFuB,KAEb2F,EAFa,OAGJ/D,mBAAS,IAHL,mBAGvB8C,EAHuB,KAGhBC,EAHgB,OAIE/C,mBAAS,IAJX,mBAIvBgD,EAJuB,KAIbC,EAJa,KAKxBxF,EAAWC,cAajB,OAZaH,aAAY,SAAAC,GAAK,OAAIA,EAAMF,QAY/BQ,cACA,kBAAC,IAAD,CAAUC,GAAE,MAInB,kBAAC,EAAD,KACE,yBAAKJ,UAAU,qBACb,kBAAC,EAAD,KACE,0BAAMuF,SAlBO,SAACf,GACpBA,EAAEgB,iBAMF1F,EN1BkB,SAACgC,GACnB,8CAAO,WAAOhC,GAAP,eAAAc,EAAA,sDACGmC,EAAKjC,sBAEXhB,EAAS,CACLe,KAAK,GAAD,OAAKtB,EAAL,cAGRI,iBACK0G,+BAA+BvE,EAAKqD,MAAOrD,EAAKuD,UAChDlE,MAAK,SAAAiC,GACF3B,QAAQC,IAAI0B,GACZ,IAAMkD,EAAc3G,iBAAO2G,YACrBZ,EAAI,UAAM5D,EAAKtB,UAAX,YAAwBsB,EAAKrB,UAEvC6F,EAAYC,cAAc,CACtBZ,YAAaD,IAEhBvE,MAAK,WACF4B,EAAGhC,WAAW,SACbC,IAAIoC,EAAKtB,KAAKnB,KACd6F,IAAI,CACDhG,UAAWsB,EAAKtB,UAChBC,SAAUqB,EAAKrB,SACfE,IAAKyC,EAAKtB,KAAKnB,IACfmE,UAAW,IAAIC,KACf7D,UAAU,IAEbC,MAAK,WACF,IAAM0E,EAAe,CACjBrF,UAAWsB,EAAKtB,UAChBC,SAAUqB,EAAKrB,SACfE,IAAKyC,EAAKtB,KAAKnB,IACfwE,MAAOrD,EAAKqD,OAGhB9D,aAAayE,QAAQ,OAAQC,KAAKC,UAAUH,IAC5CpE,QAAQC,IAAI,6BAEZ5B,EAAS,CACLe,KAAK,GAAD,OAAKtB,EAAL,YACJ+D,QAAS,CAAExB,KAAM+D,QAGxBtE,OAAM,SAACC,GACJC,QAAQC,IAAIF,GACZ1B,EAAS,CACLe,KAAK,GAAD,OAAKtB,EAAL,YACJ+D,QAAS,CAAE9B,oBAK1BD,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MArDjB,2CAAP,sDMyBSiF,CAJI,CACXjG,YAAWC,WAAU0E,QAAOE,gBAetB,uCAEA,2BACEK,KAAK,QACL7E,KAAK,OACLyD,MAAO9D,EACP+D,SAAU,SAACC,GAAD,OAAO2B,EAAa3B,EAAEC,OAAOH,QACvCI,YAAY,eAGd,2BACEgB,KAAK,QACL7E,KAAK,OACLyD,MAAO7D,EACP8D,SAAU,SAACC,GAAD,OAAO4B,EAAY5B,EAAEC,OAAOH,QACtCI,YAAY,cAGd,2BACEgB,KAAK,QACL7E,KAAK,OACLyD,MAAOa,EACPZ,SAAU,SAACC,GAAD,OAAOY,EAASZ,EAAEC,OAAOH,QACnCI,YAAY,UAGd,2BACEgB,KAAK,WACL7E,KAAK,WACLyD,MAAOe,EACPd,SAAU,SAACC,GAAD,OAAOc,EAAYd,EAAEC,OAAOH,QACtCI,YAAY,aAGd,6BACE,kD,QCrDCgC,EAfM,SAAC,GAAqC,IAAzBC,EAAwB,EAAnCC,UAAyBC,EAAU,6BACxD,OACE,kBAAC,IAAD,iBAAWA,EAAX,CAAiBD,UAAW,SAAClH,GAG3B,OAFa2B,aAAayF,QAAQ,QAAUf,KAAKgB,MAAM1F,aAAayF,QAAQ,SAAW,MAG9E,kBAACH,EAAcjH,GAEf,kBAAC,IAAD,CAAUU,GAAE,gBCiBZ4G,MAvBf,WAEE,IAAMrH,EAAOC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,QAClCG,EAAWC,cAQjB,OANA+C,qBAAU,WACHnD,EAAKQ,eACRL,ERiGF,uCAAO,WAAMA,GAAN,eAAAc,EAAA,sDACGkB,EAAOT,aAAayF,QAAQ,QAAUf,KAAKgB,MAAM1F,aAAayF,QAAQ,SAAW,KAGnFhH,EADAgC,EACS,CACLjB,KAAK,GAAD,OAAKtB,EAAL,YACJ+D,QAAS,CAAExB,SAGN,CACLjB,KAAK,GAAD,OAAKtB,EAAL,YACJ+D,QAAS,CAAE9B,MAAO,wBAXvB,2CAAP,yDQ/FC,IAGD,yBAAKxB,UAAU,OACb,kBAAC,IAAD,KAEE,kBAAC,EAAD,CAAciH,KAAK,IAAIC,OAAK,EAACN,UAAWzE,IACxC,kBAAC,IAAD,CAAO8E,KAAK,SAASL,UAAW1B,IAChC,kBAAC,IAAD,CAAO+B,KAAK,UAAUL,UAAWV,OCfrBiB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YChBAC,EAAY,CACdhH,UAAW,GACXC,SAAU,GACV0E,MAAO,GACPsC,gBAAgB,EAChBtH,eAAe,EACfqB,MAAO,MCNLgG,EAAY,CACdtE,MAAO,GACPW,cAAe,ICKJ6D,EALKC,YAAgB,CAChChI,KFMW,WAAgC,IAA/BE,EAA8B,uDAAtB2H,EAAWI,EAAW,uCAI1C,OAFAnG,QAAQC,IAAIkG,GAEJA,EAAO/G,MACX,IAAI,GAAJ,OAAQtB,EAAR,YACIM,EAAK,eACEA,EADF,CAED4H,gBAAgB,IAEpB,MACJ,IAAI,GAAJ,OAAQlI,EAAR,YACIM,EAAK,eACEA,EADF,GAEE+H,EAAOtE,QAAQxB,KAFjB,CAGD3B,eAAe,EACfsH,gBAAgB,IAEpB,MACJ,IAAI,GAAJ,OAAQlI,EAAR,YACIM,EAAK,eACEA,EADF,CAED2B,MAAOoG,EAAOtE,QAAQ9B,MACtBrB,eAAe,EACfsH,gBAAgB,IAEpB,MACJ,IAAI,GAAJ,OAAQlI,EAAR,YACI,MACJ,IAAI,GAAJ,OAAQA,EAAR,YACIM,EAAK,eACE2H,GAEP,MACJ,IAAI,GAAJ,OAAQjI,EAAR,YACIM,EAAK,eACEA,EADF,CAED2B,MAAOoG,EAAOtE,QAAQ9B,QAOlC,OAAO3B,GEjDPiC,KDCW,WAAgC,IAA/BjC,EAA8B,uDAAtB2H,EAAWI,EAAW,uCAC1C,OAAQA,EAAO/G,MACX,IAAI,GAAJ,OAAQrB,EAAR,YAKI,MACJ,IAAI,GAAJ,OAAQA,EAAR,YACIK,EAAK,eACEA,EADF,CAEDqD,MAAO0E,EAAOtE,QAAQJ,QAE1B,MACJ,KAAK1D,EACDK,EAAK,eACEA,EADF,CAEDgE,cAAe+D,EAAOtE,QAAQO,gBAc1C,OAAOhE,K,QEhCIgI,EAFDC,YAAYJ,EAAaK,YAAgBC,MCgBvDC,IAASC,cAVc,CACrBC,OAAQ,0CACRC,WAAY,wCACZC,YAAa,+CACbC,UAAW,wBACXC,cAAe,oCACfC,kBAAmB,eACnBC,MAAO,8CAKTrB,OAAOsB,MAAQb,EAEfc,IAASC,OACP,kBAAC,IAAD,CAAUF,MAAOb,GACf,kBAAC,IAAMgB,WAAP,KACE,kBAAC,EAAD,OAFJ,KAKAC,SAASC,eAAe,SLqGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB/H,MAAK,SAAAgI,GACJA,EAAaC,gBAEd7H,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAMkB,c","file":"static/js/main.0af95a40.chunk.js","sourcesContent":["export const authConstant = {\r\n    USER_LOGIN: 'USER_LOGIN',\r\n    USER_LOGOUT: 'USER_LOGOUT',\r\n}\r\n\r\nexport const userConstant = {\r\n    GET_REALTIME_USERS: 'GET_REALTIME_USERS',\r\n    GET_REALTIME_MESSAGES: 'GET_REALTIME_MESSAGES',\r\n}","import React from 'react'\r\nimport { NavLink, Link } from 'react-router-dom'\r\nimport './style.css'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { logout } from '../../actions'\r\n\r\n/**\r\n* @author\r\n* @function Header\r\n**/\r\n\r\nconst Header = (props) => {\r\n\r\n  const auth = useSelector(state => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  return(\r\n    <header className=\"header\">\r\n      <div style={{ display: 'flex' }}>\r\n        <div className=\"logo\">Web Messenger</div>\r\n\r\n        {\r\n          !auth.authenticated ?\r\n            <ul className=\"leftMenu\">\r\n              <li><NavLink to={'/login'}>Login</NavLink></li>\r\n              <li><NavLink to={'/signup'}>Sign up</NavLink></li>\r\n            </ul> : null\r\n        }\r\n        \r\n      </div>\r\n\r\n      <div style={{ margin: '20px 0', color: '#fff', fontWeight: 'bold' }}>\r\n        {auth.authenticated ?  `Hi ${auth.firstName} ${auth.lastName}` : ''}\r\n      </div>\r\n\r\n      <ul className=\"menu\">\r\n        {\r\n          auth.authenticated ?\r\n          <li>\r\n            <Link to={'#'} onClick={() => {\r\n              dispatch(logout(auth.uid))\r\n            }}>Logout</Link>\r\n          </li> : null\r\n        }\r\n      </ul>\r\n    </header>\r\n   )\r\n  }\r\n\r\n\r\nexport default Header","import { auth, firestore } from 'firebase'\r\nimport { authConstant } from './constants';\r\n\r\nexport const signup = (user) => {\r\n    return async (dispatch) => {\r\n        const db = firestore();\r\n\r\n        dispatch({\r\n            type: `${authConstant.USER_LOGIN}_REQUEST`\r\n        });\r\n\r\n        auth()\r\n            .createUserWithEmailAndPassword(user.email, user.password)\r\n            .then(data => {\r\n                console.log(data);\r\n                const currentUser = auth().currentUser;\r\n                const name = `${user.firstName} ${user.lastName}`;\r\n                \r\n                currentUser.updateProfile({\r\n                    displayName: name\r\n                })\r\n                .then(() => {\r\n                    db.collection('users')\r\n                    .doc(data.user.uid)\r\n                    .set({\r\n                        firstName: user.firstName,\r\n                        lastName: user.lastName,\r\n                        uid: data.user.uid,\r\n                        createdAt: new Date(),\r\n                        isOnline: true\r\n                    })\r\n                    .then(() => {\r\n                        const loggedInUser = {\r\n                            firstName: user.firstName,\r\n                            lastName: user.lastName,\r\n                            uid: data.user.uid,\r\n                            email: user.email\r\n                        }\r\n\r\n                        localStorage.setItem('user', JSON.stringify(loggedInUser));\r\n                        console.log('User Logged in successful');\r\n\r\n                        dispatch({\r\n                            type: `${authConstant.USER_LOGIN}_SUCCESS`,\r\n                            payload: { user: loggedInUser }\r\n                        })\r\n                    })\r\n                    .catch((error) => {\r\n                        console.log(error);\r\n                        dispatch({\r\n                            type: `${authConstant.USER_LOGIN}_FAILURE`,\r\n                            payload: { error }\r\n                        });\r\n                    });\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n}\r\n\r\nexport const signin = (user) => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: `${authConstant.USER_LOGIN}_REQUEST`\r\n        });\r\n\r\n        auth()\r\n            .signInWithEmailAndPassword(user.email, user.password)\r\n            .then((data) => {\r\n                console.log(data);\r\n\r\n                const db = firestore();\r\n\r\n                db.collection('users')\r\n                .doc(data.user.uid)\r\n                .update({\r\n                    isOnline: true,\r\n                })\r\n                .then (() => {\r\n                    const name = data.user.displayName.split(\" \");\r\n                    const firstName = name[0];\r\n                    const lastName = name[1];\r\n\r\n                    const loggedInUser = {\r\n                        firstName: firstName,\r\n                        lastName: lastName,\r\n                        uid: data.user.uid,\r\n                        email: data.user.email\r\n                    }\r\n\r\n                    localStorage.setItem(\"user\", JSON.stringify(loggedInUser));\r\n\r\n                    dispatch({\r\n                        type: `${authConstant.USER_LOGIN}_SUCCESS`,\r\n                        payload: { user: loggedInUser }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                dispatch({\r\n                    type: `${authConstant.USER_LOGIN}_FAILURE`,\r\n                    payload: { error }\r\n                });\r\n            });\r\n    }\r\n}\r\n\r\nexport const isLoggedInUser = () => {\r\n    return async dispatch => {\r\n        const user = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null;\r\n    \r\n        if (user) {\r\n            dispatch({\r\n                type: `${authConstant.USER_LOGIN}_SUCCESS`,\r\n                payload: { user }\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: `${authConstant.USER_LOGIN}_FAILURE`,\r\n                payload: { error: 'Login again please' }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport const logout = (uid) => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: `${authConstant.USER_LOGOUT}_REQUEST`\r\n        });\r\n\r\n        const db = firestore();\r\n        db.collection('users')\r\n            .doc(uid)\r\n            .update({\r\n                isOnline: false,\r\n            })\r\n            .then(() => {\r\n                auth()\r\n                    .signOut()\r\n                    .then(() => {\r\n                        localStorage.clear();\r\n                        dispatch({ type: `${authConstant.USER_LOGOUT}_SUCCESS` });\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error);\r\n                        dispatch({ type: `${authConstant.USER_LOGOUT}_FAILURE` });\r\n                    });\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n}","import React from 'react'\r\nimport Header from '../Header'\r\n\r\n/**\r\n* @author\r\n* @function Layout\r\n**/\r\n\r\nconst Layout = (props) => {\r\n  return(\r\n    <div>\r\n        <Header />\r\n        {props.children}\r\n    </div>\r\n   )\r\n  }\r\n\r\n\r\nexport default Layout","import React, { useState } from 'react';\r\nimport './style.css';\r\nimport Layout from '../../components/Layout';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getRealtimeUsers, updateMessage, getRealtimeConversations } from '../../actions';\r\n\r\nconst User = (props) => {\r\n  const {user, onClick} = props;\r\n  return (\r\n    <div onClick={() => onClick(user)} className=\"displayName\">\r\n      <div className=\"displayPic\">\r\n        <img src=\"https://i.pinimg.com/originals/be/ac/96/beac96b8e13d2198fd4bb1d5ef56cdcf.jpg\" alt=\"\" />\r\n      </div>\r\n      <div style={{ display: 'flex', flex: 1, justifyContent: 'space-between', margin: '0 10px' }}>\r\n        <span style={{ fontWeight: 500 }}>{user.firstName} {user.lastName}</span>\r\n        <span className={user.isOnline ? `onlineStatus` : `onlineStatus off`}></span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst HomePage = (props) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector(state => state.auth);\r\n  const user = useSelector(state => state.user);\r\n  const [chatStarted, setChatStarted] = useState('');\r\n  const [chatUser, setChatUser] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [userUid, setUserUid] = useState(null);\r\n\r\n  let unsubscribe;\r\n\r\n  useEffect(() => {\r\n    unsubscribe = dispatch(getRealtimeUsers(auth.uid))\r\n    .then(unsubscribe => {\r\n      return unsubscribe;\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      // cleanup\r\n      unsubscribe\r\n        .then(f => {\r\n          f();\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  const initChat = (user) => {\r\n    setChatStarted(true);\r\n    setChatUser(`${user.firstName} ${user.lastName}`);\r\n    setUserUid(user.uid);\r\n\r\n    console.log(user);\r\n\r\n    dispatch(getRealtimeConversations({ uid_1: auth.uid, uid_2: user.uid }));\r\n  }\r\n\r\n  const submitMessage = (e) => {\r\n    const msgObj = {\r\n      user_uid_1: auth.uid,\r\n      user_uid_2: userUid,\r\n      message\r\n    }\r\n\r\n    if (message !== \"\") {\r\n      dispatch(updateMessage(msgObj))\r\n      .then(() => {\r\n        setMessage('');\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <section className=\"container\">\r\n        <div className=\"listOfUsers\">\r\n\r\n          {\r\n            user.users.length > 0 ?\r\n              user.users.map(user => {\r\n                return (\r\n                  <User\r\n                    onClick={initChat} \r\n                    key={user.uid} \r\n                    user={user}\r\n                  />\r\n                );\r\n              }) : null\r\n          }\r\n\r\n        </div>\r\n        <div className=\"chatArea\">\r\n          <div className=\"chatHeader\"> \r\n          {\r\n            chatStarted ? chatUser : ''\r\n          }\r\n          </div>\r\n          <div className=\"messageSections\">\r\n            {\r\n              chatStarted ?\r\n              user.conversations.map(con => \r\n                <div key={con.uid} style={{ textAlign:  con.user_uid_1 == auth.uid ? 'right': 'left' }}>\r\n                  <p className=\"messageStyle\">{con.message}</p>\r\n                </div>\r\n              )\r\n              : null\r\n            }\r\n          </div>\r\n\r\n          {\r\n            chatStarted ?\r\n            <div className=\"chatControls\">\r\n              <textarea \r\n                value={message}\r\n                onChange={(e) => setMessage(e.target.value)}\r\n                placeholder=\"Write message...\"\r\n              />\r\n              <button onClick={submitMessage}>Send</button>\r\n            </div> : null\r\n          }\r\n        </div>\r\n      </section>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default HomePage;","import { userConstant } from \"./constants\";\r\nimport { firestore } from 'firebase';\r\n\r\nexport const getRealtimeUsers = (uid) => {\r\n    return async dispatch => {\r\n        dispatch({ type: `${userConstant.GET_REALTIME_USERS}_REQUEST`});\r\n    \r\n        const db = firestore();\r\n\r\n        const unsubscribe = db.collection(\"users\")\r\n            .onSnapshot(querySnapshot => {\r\n                const users = [];\r\n                querySnapshot.forEach(function (doc) {\r\n                    if (doc.data().uid != uid) {\r\n                        users.push(doc.data());\r\n                    }\r\n                });\r\n                // console.log(users);\r\n                dispatch({ \r\n                    type: `${userConstant.GET_REALTIME_USERS}_SUCCESS`,\r\n                    payload: { users }\r\n                });\r\n            });\r\n\r\n            return unsubscribe;\r\n    }\r\n}\r\n\r\nexport const updateMessage = (msgObj) => {\r\n    return async dispatch => {\r\n        const db = firestore();\r\n        db.collection('conversations')\r\n            .add({\r\n                ...msgObj,\r\n                isView: false,\r\n                createdAt: new Date(),\r\n            })\r\n            .then((data) => {\r\n                // console.log(data);\r\n\r\n                // dispatch({\r\n                //     type: userConstant.GET_REALTIME_MESSAGES,\r\n                // })\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n}\r\n\r\nexport const getRealtimeConversations = (user) => {\r\n    return async dispatch => {\r\n        const db = firestore();\r\n        db.collection('conversations')\r\n            .where('user_uid_1', 'in', [user.uid_1, user.uid_2])\r\n            .orderBy('createdAt', 'asc')\r\n            .onSnapshot((querySnapshot) => {\r\n                const conversations = [];\r\n                querySnapshot.forEach(doc => {\r\n                    if (\r\n                        (doc.data().user_uid_1 == user.uid_1 && doc.data().user_uid_2 == user.uid_2)\r\n                        || \r\n                        (doc.data().user_uid_1 == user.uid_2 && doc.data().user_uid_2 == user.uid_1)\r\n                    ) {\r\n                        conversations.push(doc.data());\r\n                    }\r\n                });\r\n\r\n                if (conversations.length > 0) {\r\n                    dispatch({\r\n                        type: userConstant.GET_REALTIME_MESSAGES,\r\n                        payload: { conversations }\r\n                    });\r\n                } else {\r\n                    dispatch({\r\n                        type: `${userConstant.GET_REALTIME_MESSAGES}_FAILURE`,\r\n                        payload: { conversations: [] }\r\n                    })\r\n                }\r\n\r\n                console.log(conversations);\r\n            })\r\n    }\r\n}","import React from 'react';\r\nimport './style.css';\r\n\r\n/**\r\n* @author\r\n* @function Card\r\n**/\r\n\r\nconst Card = (props) => {\r\n  return(\r\n    <div className=\"card\">\r\n        {props.children}\r\n    </div>\r\n   )\r\n}\r\n\r\nexport default Card","import React from 'react'\r\nimport Layout from '../../components/Layout'\r\nimport Card from '../../components/UI/Card'\r\nimport './style.css'\r\nimport { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { signin } from '../../actions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n/**\r\n* @author\r\n* @function LoginPage\r\n**/\r\n\r\nconst LoginPage = (props) => {\r\n  \r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector(state => state.auth);\r\n\r\n  const userLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (email == \"\") {\r\n      alert(\"Email is required\");\r\n      return;\r\n    }\r\n\r\n    if (password == \"\") {\r\n      alert(\"Password is required\");\r\n      return;\r\n    }\r\n\r\n    dispatch(signin({ email, password }));\r\n  }\r\n\r\n  if (auth.authenticated) {\r\n    return <Redirect to={`/`} />\r\n  }\r\n\r\n  return(\r\n    <Layout>\r\n      <div className=\"loginContainer\">\r\n        <Card>\r\n          <form onSubmit={userLogin}>\r\n            <input \r\n              name=\"email\"\r\n              type=\"text\" \r\n              value={email} \r\n              onChange={(e) => setEmail(e.target.value)}\r\n              placeholder=\"Email\"\r\n            />\r\n\r\n            <input\r\n              name=\"password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              placeholder=\"Password\"\r\n            />\r\n\r\n            <div>\r\n              <button>Login</button>\r\n            </div>\r\n          </form>\r\n        </Card>\r\n      </div>\r\n    </Layout>\r\n   )\r\n\r\n }\r\n\r\nexport default LoginPage","import React from 'react'\r\nimport Layout from '../../components/Layout'\r\nimport Card from '../../components/UI/Card'\r\nimport './style.css'\r\nimport { useState } from 'react'\r\nimport { signup } from '../../actions'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n/**\r\n* @author\r\n* @function RegisterPage\r\n**/\r\n\r\nconst RegisterPage = (props) => {\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector(state => state.auth);\r\n\r\n  const registerUser = (e) => {\r\n    e.preventDefault();\r\n\r\n    const user = {\r\n      firstName, lastName, email, password  \r\n    }\r\n    \r\n    dispatch(signup(user));\r\n  }\r\n\r\n  if (auth.authenticated) {\r\n    return <Redirect to={`/`} />\r\n  }\r\n\r\n  return(\r\n    <Layout>\r\n      <div className=\"registerContainer\">\r\n        <Card>\r\n          <form onSubmit={registerUser}>\r\n            <h3>Sign Up</h3>\r\n\r\n            <input\r\n              name=\"fname\"\r\n              type=\"text\"\r\n              value={firstName}\r\n              onChange={(e) => setFirstName(e.target.value)}\r\n              placeholder=\"First Name\"\r\n            />\r\n\r\n            <input\r\n              name=\"lname\"\r\n              type=\"text\"\r\n              value={lastName}\r\n              onChange={(e) => setLastName(e.target.value)}\r\n              placeholder=\"Last Name\"\r\n            />\r\n\r\n            <input\r\n              name=\"email\"\r\n              type=\"text\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              placeholder=\"Email\"\r\n            />\r\n\r\n            <input\r\n              name=\"password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              placeholder=\"Password\"\r\n            />\r\n\r\n            <div>\r\n              <button>Sign Up</button>\r\n            </div>\r\n          </form>\r\n        </Card>\r\n      </div>\r\n    </Layout>\r\n   )\r\n  }\r\n\r\n\r\nexport default RegisterPage","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\n/**\r\n* @author\r\n* @function PrivateRoute\r\n**/\r\n\r\nconst PrivateRoute = ({component: Component, ...rest}) => {\r\n  return(\r\n    <Route {...rest} component={(props) => {\r\n      const user = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null;\r\n    \r\n      if (user) {\r\n        return <Component {...props} />\r\n      } else {\r\n        return <Redirect to={`/login`} />\r\n      }\r\n    }} />\r\n   )\r\n\r\n }\r\n\r\nexport default PrivateRoute","import React, { useEffect } from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport HomePage from './containers/HomePage';\nimport LoginPage from './containers/LoginPage';\nimport RegisterPage from './containers/RegisterPage';\nimport PrivateRoute from './components/PrivateRoute';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { isLoggedInUser } from './actions';\n\nfunction App() {\n\n  const auth = useSelector(state => state.auth);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!auth.authenticated) {\n      dispatch(isLoggedInUser())\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        {/* only logged in user can access this route */}\n        <PrivateRoute path=\"/\" exact component={HomePage} />  \n        <Route path=\"/login\" component={LoginPage} />  \n        <Route path=\"/signup\" component={RegisterPage} />  \n      </Router>      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { authConstant } from \"../actions/constants\"\r\n\r\nconst initState = {\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    authenticating: false,\r\n    authenticated: false,\r\n    error: null,\r\n}\r\n\r\nexport default (state = initState, action) => {\r\n\r\n    console.log(action);\r\n\r\n    switch (action.type) {\r\n        case `${authConstant.USER_LOGIN}_REQUEST`:\r\n            state = {\r\n                ...state,\r\n                authenticating: true\r\n            }\r\n            break;\r\n        case `${authConstant.USER_LOGIN}_SUCCESS`:\r\n            state = {\r\n                ...state,\r\n                ...action.payload.user,\r\n                authenticated: true,\r\n                authenticating: false,\r\n            }\r\n            break;\r\n        case `${authConstant.USER_LOGIN}_FAILURE`:\r\n            state = {\r\n                ...state,\r\n                error: action.payload.error,\r\n                authenticated: false,\r\n                authenticating: false,\r\n            }\r\n            break;\r\n        case `${authConstant.USER_LOGOUT}_REQUEST`:\r\n            break;\r\n        case `${authConstant.USER_LOGOUT}_SUCCESS`:\r\n            state = {\r\n                ...initState\r\n            }\r\n            break;\r\n        case `${authConstant.USER_LOGOUT}_FAILURE`:\r\n            state = {\r\n                ...state,\r\n                error: action.payload.error\r\n            }\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return state;\r\n}","import { userConstant } from \"../actions/constants\";\r\n\r\nconst initState = {\r\n    users: [],\r\n    conversations: [],\r\n}\r\n\r\nexport default (state = initState, action) => {\r\n    switch (action.type) {\r\n        case `${userConstant.GET_REALTIME_USERS}_REQUEST`:\r\n            // state = {\r\n            //     ...state,\r\n            //     authenticating: true\r\n            // }\r\n            break;\r\n        case `${userConstant.GET_REALTIME_USERS}_SUCCESS`:\r\n            state = {\r\n                ...state,\r\n                users: action.payload.users\r\n            }\r\n            break;\r\n        case userConstant.GET_REALTIME_MESSAGES:\r\n            state = {\r\n                ...state,\r\n                conversations: action.payload.conversations\r\n            }\r\n            break;\r\n            // case `${userConstant.GET_REALTIME_USERS}_FAILURE`:\r\n            //     state = {\r\n            //         ...state,\r\n            //         users: action.payload.users\r\n            //     }\r\n            //     break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return state;\r\n}","import { combineReducers } from \"redux\"\r\nimport authReducer from \"./auth.reducer\";\r\nimport userReducer from \"./user.reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    user: userReducer,\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux'\r\nimport rootReducer from '../reducers'\r\nimport thunk from 'redux-thunk';\r\n\r\nconst Store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default Store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport firebase from 'firebase';\nimport { Provider } from 'react-redux';\nimport Store from './store';\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCWQnOw7DZez4YLRTI4Mr-VU1uFhwhFIA4\",\n  authDomain: \"chat-firestore-160408.firebaseapp.com\",\n  databaseURL: \"https://chat-firestore-160408.firebaseio.com\",\n  projectId: \"chat-firestore-160408\",\n  storageBucket: \"chat-firestore-160408.appspot.com\",\n  messagingSenderId: \"966742168017\",\n  appId: \"1:966742168017:web:0b9bcb2a10d8df285ad0f0\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nwindow.store = Store;\n\nReactDOM.render(\n  <Provider store={Store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}